from django import forms
from django import forms
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Layout, Submit, Row, Column, Fieldset, ButtonHolder, Div
from django.contrib.auth import get_user_model
from django.contrib.auth.forms import UserCreationForm

from users.models import Profile, Message, Verification

User = get_user_model()


class UserRegisterForm(UserCreationForm):

    email = forms.EmailField()

    class Meta:
        model = User
        fields = ['username', 'email', 'first_name','last_name', 'password1', 'password2']
        widgets = {'first_name': forms.HiddenInput(), 'last_name': forms.HiddenInput()}


class UserRegisterProfileForm(forms.Form):

    ACCT_TYPE_CHOICES = (
        ('', 'Choose Account Type...'),
        ("sm", "Single Male"),
        ("sf", "Single Female"),
        ("c", "Couple"),
    )

    STATE_CHOICES = (
        ('', 'Choose Your State...'),
        ('AL', 'Alabama'),
        ('AK', 'Alaska'),
        ('AZ', 'Arizona'),
        ('AR', 'Arkansas'),
        ('CA', 'California'),
        ('CO', 'Colorado'),
        ('CT', 'Connecticut'),
        ('DE', 'Delaware'),
        ('FL', 'Florida'),
        ('GA', 'Georgia'),
        ('HI', 'Hawaii'),
        ('ID', 'Idaho'),
        ('IL', 'Illinois'),
        ('IN', 'Indiana'),
        ('IA', 'Iowa'),
        ('KS', 'Kansas'),
        ('KY', 'Kentucky'),
        ('LA', 'Louisiana'),
        ('ME', 'Maine'),
        ('MD', 'Maryland'),
        ('MA', 'Massachusetts'),
        ('MI', 'Michigan'),
        ('MN', 'Minnesota'),
        ('MS', 'Mississippi'),
        ('MO', 'Missouri'),
        ('MT', 'Montana'),
        ('NE', 'Nebraska'),
        ('NV', 'Nevada'),
        ('NH', 'New Hampshire'),
        ('NJ', 'New Jersey'),
        ('NM', 'New Mexico'),
        ('NY', 'New York'),
        ('NC', 'North Carolina'),
        ('ND', 'North Dakota'),
        ('OH', 'Ohio'),
        ('OK', 'Oklahoma'),
        ('OR', 'Oregon'),
        ('PA', 'Pennsylvania'),
        ('RI', 'Rhode Island'),
        ('SC', 'South Carolina'),
        ('SD', 'South Dakota'),
        ('TN', 'Tennessee'),
        ('TX', 'Texas'),
        ('UT', 'Utah'),
        ('VT', 'Vermont'),
        ('VA', 'Virginia'),
        ('WA', 'Washington'),
        ('WV', 'West Virginia'),
        ('WI', 'Wisconsin'),
        ('WY', 'Wyoming'),
    )

    COUNTRY_CHOICES = (
    ('US', 'UNITED STATES'),
    ('AF', 'AFGHANISTAN'),
    ('AL', 'ALBANIA'),
    ('DZ', 'ALGERIA'),
    ('AS', 'AMERICAN SAMOA'),
    ('AD', 'ANDORRA'),
    ('AO', 'ANGOLA'),
    ('AI', 'ANGUILLA'),
    ('AQ', 'ANTARCTICA'),
    ('AG', 'ANTIGUA AND BARBUDA'),
    ('AR', 'ARGENTINA'),
    ('AM', 'ARMENIA'),
    ('AW', 'ARUBA'),
    ('AU', 'AUSTRALIA'),
    ('AT', 'AUSTRIA'),
    ('AZ', 'AZERBAIJAN'),
    ('BS', 'BAHAMAS'),
    ('BH', 'BAHRAIN'),
    ('BD', 'BANGLADESH'),
    ('BB', 'BARBADOS'),
    ('BY', 'BELARUS'),
    ('BE', 'BELGIUM'),
    ('BZ', 'BELIZE'),
    ('BJ', 'BENIN'),
    ('BM', 'BERMUDA'),
    ('BT', 'BHUTAN'),
    ('BO', 'BOLIVIA'),
    ('BA', 'BOSNIA AND HERZEGOVINA'),
    ('BW', 'BOTSWANA'),
    ('BV', 'BOUVET ISLAND'),
    ('BR', 'BRAZIL'),
    ('IO', 'BRITISH INDIAN OCEAN TERRITORY'),
    ('BN', 'BRUNEI DARUSSALAM'),
    ('BG', 'BULGARIA'),
    ('BF', 'BURKINA FASO'),
    ('BI', 'BURUNDI'),
    ('KH', 'CAMBODIA'),
    ('CM', 'CAMEROON'),
    ('CA', 'CANADA'),
    ('CV', 'CAPE VERDE'),
    ('KY', 'CAYMAN ISLANDS'),
    ('CF', 'CENTRAL AFRICAN REPUBLIC'),
    ('TD', 'CHAD'),
    ('CL', 'CHILE'),
    ('CN', 'CHINA'),
    ('CX', 'CHRISTMAS ISLAND'),
    ('CC', 'COCOS (KEELING) ISLANDS'),
    ('CO', 'COLOMBIA'),
    ('KM', 'COMOROS'),
    ('CG', 'CONGO'),
    ('CD', 'CONGO, THE DEMOCRATIC REPUBLIC OF'),
    ('CK', 'COOK ISLANDS'),
    ('CR', 'COSTA RICA'),
    ('CI', "CÃ”TE D'IVOIRE"),
    ('HR', 'CROATIA'),
    ('CU', 'CUBA'),
    ('CY', 'CYPRUS'),
    ('CZ', 'CZECH REPUBLIC'),
    ('DK', 'DENMARK'),
    ('DJ', 'DJIBOUTI'),
    ('DM', 'DOMINICA'),
    ('DO', 'DOMINICAN REPUBLIC'),
    ('EC', 'ECUADOR'),
    ('EG', 'EGYPT'),
    ('SV', 'EL SALVADOR'),
    ('GQ', 'EQUATORIAL GUINEA'),
    ('ER', 'ERITREA'),
    ('EE', 'ESTONIA'),
    ('ET', 'ETHIOPIA'),
    ('FK', 'FALKLAND ISLANDS (MALVINAS)'),
    ('FO', 'FAROE ISLANDS'),
    ('FJ', 'FIJI'),
    ('FI', 'FINLAND'),
    ('FR', 'FRANCE'),
    ('GF', 'FRENCH GUIANA'),
    ('PF', 'FRENCH POLYNESIA'),
    ('TF', 'FRENCH SOUTHERN TERRITORIES'),
    ('GA', 'GABON'),
    ('GM', 'GAMBIA'),
    ('GE', 'GEORGIA'),
    ('DE', 'GERMANY'),
    ('GH', 'GHANA'),
    ('GI', 'GIBRALTAR'),
    ('GR', 'GREECE'),
    ('GL', 'GREENLAND'),
    ('GD', 'GRENADA'),
    ('GP', 'GUADELOUPE'),
    ('GU', 'GUAM'),
    ('GT', 'GUATEMALA'),
    ('GN', 'GUINEA'),
    ('GW', 'GUINEA'),
    ('GY', 'GUYANA'),
    ('HT', 'HAITI'),
    ('HM', 'HEARD ISLAND AND MCDONALD ISLANDS'),
    ('HN', 'HONDURAS'),
    ('HK', 'HONG KONG'),
    ('HU', 'HUNGARY'),
    ('IS', 'ICELAND'),
    ('IN', 'INDIA'),
    ('ID', 'INDONESIA'),
    ('IR', 'IRAN, ISLAMIC REPUBLIC OF'),
    ('IQ', 'IRAQ'),
    ('IE', 'IRELAND'),
    ('IL', 'ISRAEL'),
    ('IT', 'ITALY'),
    ('JM', 'JAMAICA'),
    ('JP', 'JAPAN'),
    ('JO', 'JORDAN'),
    ('KZ', 'KAZAKHSTAN'),
    ('KE', 'KENYA'),
    ('KI', 'KIRIBATI'),
    ('KP', "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF"),
    ('KR', 'KOREA, REPUBLIC OF'),
    ('KW', 'KUWAIT'),
    ('KG', 'KYRGYZSTAN'),
    ('LA', "LAO PEOPLE'S DEMOCRATIC REPUBLIC"),
    ('LV', 'LATVIA'),
    ('LB', 'LEBANON'),
    ('LS', 'LESOTHO'),
    ('LR', 'LIBERIA'),
    ('LY', 'LIBYAN ARAB JAMAHIRIYA'),
    ('LI', 'LIECHTENSTEIN'),
    ('LT', 'LITHUANIA'),
    ('LU', 'LUXEMBOURG'),
    ('MO', 'MACAO'),
    ('MK', 'MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF'),
    ('MG', 'MADAGASCAR'),
    ('MW', 'MALAWI'),
    ('MY', 'MALAYSIA'),
    ('MV', 'MALDIVES'),
    ('ML', 'MALI'),
    ('MT', 'MALTA'),
    ('MH', 'MARSHALL ISLANDS'),
    ('MQ', 'MARTINIQUE'),
    ('MR', 'MAURITANIA'),
    ('MU', 'MAURITIUS'),
    ('YT', 'MAYOTTE'),
    ('MX', 'MEXICO'),
    ('FM', 'MICRONESIA, FEDERATED STATES OF'),
    ('MD', 'MOLDOVA, REPUBLIC OF'),
    ('MC', 'MONACO'),
    ('MN', 'MONGOLIA'),
    ('MS', 'MONTSERRAT'),
    ('MA', 'MOROCCO'),
    ('MZ', 'MOZAMBIQUE'),
    ('MM', 'MYANMAR'),
    ('NA', 'NAMIBIA'),
    ('NR', 'NAURU'),
    ('NP', 'NEPAL'),
    ('NL', 'NETHERLANDS'),
    ('AN', 'NETHERLANDS ANTILLES'),
    ('NC', 'NEW CALEDONIA'),
    ('NZ', 'NEW ZEALAND'),
    ('NI', 'NICARAGUA'),
    ('NE', 'NIGER'),
    ('NG', 'NIGERIA'),
    ('NU', 'NIUE'),
    ('NF', 'NORFOLK ISLAND'),
    ('MP', 'NORTHERN MARIANA ISLANDS'),
    ('NO', 'NORWAY'),
    ('OM', 'OMAN'),
    ('PK', 'PAKISTAN'),
    ('PW', 'PALAU'),
    ('PS', 'PALESTINIAN TERRITORY, OCCUPIED'),
    ('PA', 'PANAMA'),
    ('PG', 'PAPUA NEW GUINEA'),
    ('PY', 'PARAGUAY'),
    ('PE', 'PERU'),
    ('PH', 'PHILIPPINES'),
    ('PN', 'PITCAIRN'),
    ('PL', 'POLAND'),
    ('PT', 'PORTUGAL'),
    ('PR', 'PUERTO RICO'),
    ('QA', 'QATAR'),
    ('RE', 'RÃ‰UNION'),
    ('RO', 'ROMANIA'),
    ('RU', 'RUSSIAN FEDERATION'),
    ('RW', 'RWANDA'),
    ('SH', 'SAINT HELENA'),
    ('KN', 'SAINT KITTS AND NEVIS'),
    ('LC', 'SAINT LUCIA'),
    ('PM', 'SAINT PIERRE AND MIQUELON'),
    ('VC', 'SAINT VINCENT AND THE GRENADINES'),
    ('WS', 'SAMOA'),
    ('SM', 'SAN MARINO'),
    ('ST', 'SAO TOME AND PRINCIPE'),
    ('SA', 'SAUDI ARABIA'),
    ('SN', 'SENEGAL'),
    ('CS', 'SERBIA AND MONTENEGRO'),
    ('SC', 'SEYCHELLES'),
    ('SL', 'SIERRA LEONE'),
    ('SG', 'SINGAPORE'),
    ('SK', 'SLOVAKIA'),
    ('SI', 'SLOVENIA'),
    ('SB', 'SOLOMON ISLANDS'),
    ('SO', 'SOMALIA'),
    ('ZA', 'SOUTH AFRICA'),
    ('GS', 'SOUTH GEORGIA AND SOUTH SANDWICH ISLANDS'),
    ('ES', 'SPAIN'),
    ('LK', 'SRI LANKA'),
    ('SD', 'SUDAN'),
    ('SR', 'SURINAME'),
    ('SJ', 'SVALBARD AND JAN MAYEN'),
    ('SZ', 'SWAZILAND'),
    ('SE', 'SWEDEN'),
    ('CH', 'SWITZERLAND'),
    ('SY', 'SYRIAN ARAB REPUBLIC'),
    ('TW', 'TAIWAN, PROVINCE OF CHINA'),
    ('TJ', 'TAJIKISTAN'),
    ('TZ', 'TANZANIA, UNITED REPUBLIC OF'),
    ('TH', 'THAILAND'),
    ('TL', 'TIMOR'),
    ('TG', 'TOGO'),
    ('TK', 'TOKELAU'),
    ('TO', 'TONGA'),
    ('TT', 'TRINIDAD AND TOBAGO'),
    ('TN', 'TUNISIA'),
    ('TR', 'TURKEY'),
    ('TM', 'TURKMENISTAN'),
    ('TC', 'TURKS AND CAICOS ISLANDS'),
    ('TV', 'TUVALU'),
    ('UG', 'UGANDA'),
    ('UA', 'UKRAINE'),
    ('AE', 'UNITED ARAB EMIRATES'),
    ('GB', 'UNITED KINGDOM'),
    ('US', 'UNITED STATES'),
    ('UM', 'UNITED STATES MINOR OUTLYING ISLANDS'),
    ('UY', 'URUGUAY'),
    ('UZ', 'UZBEKISTAN'),
    ('VU', 'VANUATU'),
    ('VN', 'VIETNAM'),
    ('VG', 'VIRGIN ISLANDS, BRITISH'),
    ('VI', 'VIRGIN ISLANDS, U.S.'),
    ('WF', 'WALLIS AND FUTUNA'),
    ('EH', 'WESTERN SAHARA'),
    ('YE', 'YEMEN'),
    ('ZW', 'ZIMBABWE')
)
    first_name = forms.CharField(label="First Name", required=True,
                                 widget=forms.TextInput(attrs={'placeholder': 'Please Enter Your First Name'}))

    last_name = forms.CharField(label="Last Name", required=True,
                                widget=forms.TextInput(attrs={'placeholder': 'Please Enter Your Last Name'}))

    image = forms.FileField(label='Public Profile Image', required=True)
    account_type = forms.ChoiceField(label='Account Type', choices=ACCT_TYPE_CHOICES, required=True)
    his_age = forms.CharField(label='His Age', required=False,
                              widget=forms.TextInput(attrs={'placeholder': 'Please Enter His Age'}))
    her_age = forms.CharField(label='Her Age', required=False,
                              widget=forms.TextInput(attrs={'placeholder': 'Please Enter Her Age'}))
    bio = forms.CharField(label='Your Bio', required=False,
                          widget=forms.Textarea(attrs={'placeholder': 'Tell us something about you!', 'rows': '5'}))
    interests = forms.CharField(label='Your Interests', required=False,
                                widget=forms.Textarea(
                                    attrs={'placeholder': 'What are your interests? What are you looking for?',
                                           'rows': '2'}))
    kik = forms.CharField(label='Kik Username', required=False,
                          widget=forms.TextInput(attrs={'placeholder': 'Enter your Kik Username'}))

    city = forms.CharField(label='City', required=True,
                           widget=forms.TextInput(attrs={'placeholder': 'Enter your city'}))

    state = forms.ChoiceField(label='State', required=True, choices=STATE_CHOICES)

    zip = forms.IntegerField(label='Zip Code', required=True)

    country = forms.ChoiceField(label='Country', required=True, choices=COUNTRY_CHOICES)

    def __init__(self, *args, **kwargs):
        super(UserRegisterProfileForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.layout = Layout(
            Row(
                Column('first_name', css_class='form-group col-6'),
                Column('last_name', css_class='form-group col-6')
            ),
            Row(
                Column('account_type', css_class='form-group col-6'),
                Column('image', css_class='form-group col-6')
            ),
            Row(
                Column('his_age', css_class='form-group col-6'),
                Column('her_age', css_class='form-group col-6')
            ),
            Row(
                Column('city',  css_class='form-group col-6'),
                Column('zip',  css_class='form-group col-6'),
            ),
            Row(
                Column('state',  css_class='form-group col-6'),
                Column('country', css_class='form-group col-6' ),
            ),
            Row(
                Column('bio', css_class='form-group col-12')
            ),
            Row(
                Column('interests', css_class='form-group col-12')
            ),
            Row(
                Column('kik', css_class='form-group col-6')
            ),
            ButtonHolder(
                Submit('save', 'Save')
            ),
        )


class UserUpdateForm(forms.ModelForm):
    email = forms.EmailField()

    class Meta:
        model = User
        fields = ['username', 'email']


class ProfileUpdateForm(forms.Form):
    ACCT_TYPE_CHOICES = (
        ('', 'Choose Account Type...'),
        ("sm", "Single Male"),
        ("sf", "Single Female"),
        ("c", "Couple"),
    )

    STATE_CHOICES = (
        ('', 'Choose Your State...'),
        ('AL', 'Alabama'),
        ('AK', 'Alaska'),
        ('AZ', 'Arizona'),
        ('AR', 'Arkansas'),
        ('CA', 'California'),
        ('CO', 'Colorado'),
        ('CT', 'Connecticut'),
        ('DE', 'Delaware'),
        ('FL', 'Florida'),
        ('GA', 'Georgia'),
        ('HI', 'Hawaii'),
        ('ID', 'Idaho'),
        ('IL', 'Illinois'),
        ('IN', 'Indiana'),
        ('IA', 'Iowa'),
        ('KS', 'Kansas'),
        ('KY', 'Kentucky'),
        ('LA', 'Louisiana'),
        ('ME', 'Maine'),
        ('MD', 'Maryland'),
        ('MA', 'Massachusetts'),
        ('MI', 'Michigan'),
        ('MN', 'Minnesota'),
        ('MS', 'Mississippi'),
        ('MO', 'Missouri'),
        ('MT', 'Montana'),
        ('NE', 'Nebraska'),
        ('NV', 'Nevada'),
        ('NH', 'New Hampshire'),
        ('NJ', 'New Jersey'),
        ('NM', 'New Mexico'),
        ('NY', 'New York'),
        ('NC', 'North Carolina'),
        ('ND', 'North Dakota'),
        ('OH', 'Ohio'),
        ('OK', 'Oklahoma'),
        ('OR', 'Oregon'),
        ('PA', 'Pennsylvania'),
        ('RI', 'Rhode Island'),
        ('SC', 'South Carolina'),
        ('SD', 'South Dakota'),
        ('TN', 'Tennessee'),
        ('TX', 'Texas'),
        ('UT', 'Utah'),
        ('VT', 'Vermont'),
        ('VA', 'Virginia'),
        ('WA', 'Washington'),
        ('WV', 'West Virginia'),
        ('WI', 'Wisconsin'),
        ('WY', 'Wyoming'),
    )

    COUNTRY_CHOICES = (
        ('US', 'UNITED STATES'),
        ('AF', 'AFGHANISTAN'),
        ('AL', 'ALBANIA'),
        ('DZ', 'ALGERIA'),
        ('AS', 'AMERICAN SAMOA'),
        ('AD', 'ANDORRA'),
        ('AO', 'ANGOLA'),
        ('AI', 'ANGUILLA'),
        ('AQ', 'ANTARCTICA'),
        ('AG', 'ANTIGUA AND BARBUDA'),
        ('AR', 'ARGENTINA'),
        ('AM', 'ARMENIA'),
        ('AW', 'ARUBA'),
        ('AU', 'AUSTRALIA'),
        ('AT', 'AUSTRIA'),
        ('AZ', 'AZERBAIJAN'),
        ('BS', 'BAHAMAS'),
        ('BH', 'BAHRAIN'),
        ('BD', 'BANGLADESH'),
        ('BB', 'BARBADOS'),
        ('BY', 'BELARUS'),
        ('BE', 'BELGIUM'),
        ('BZ', 'BELIZE'),
        ('BJ', 'BENIN'),
        ('BM', 'BERMUDA'),
        ('BT', 'BHUTAN'),
        ('BO', 'BOLIVIA'),
        ('BA', 'BOSNIA AND HERZEGOVINA'),
        ('BW', 'BOTSWANA'),
        ('BV', 'BOUVET ISLAND'),
        ('BR', 'BRAZIL'),
        ('IO', 'BRITISH INDIAN OCEAN TERRITORY'),
        ('BN', 'BRUNEI DARUSSALAM'),
        ('BG', 'BULGARIA'),
        ('BF', 'BURKINA FASO'),
        ('BI', 'BURUNDI'),
        ('KH', 'CAMBODIA'),
        ('CM', 'CAMEROON'),
        ('CA', 'CANADA'),
        ('CV', 'CAPE VERDE'),
        ('KY', 'CAYMAN ISLANDS'),
        ('CF', 'CENTRAL AFRICAN REPUBLIC'),
        ('TD', 'CHAD'),
        ('CL', 'CHILE'),
        ('CN', 'CHINA'),
        ('CX', 'CHRISTMAS ISLAND'),
        ('CC', 'COCOS (KEELING) ISLANDS'),
        ('CO', 'COLOMBIA'),
        ('KM', 'COMOROS'),
        ('CG', 'CONGO'),
        ('CD', 'CONGO, THE DEMOCRATIC REPUBLIC OF'),
        ('CK', 'COOK ISLANDS'),
        ('CR', 'COSTA RICA'),
        ('CI', "CÃ”TE D'IVOIRE"),
        ('HR', 'CROATIA'),
        ('CU', 'CUBA'),
        ('CY', 'CYPRUS'),
        ('CZ', 'CZECH REPUBLIC'),
        ('DK', 'DENMARK'),
        ('DJ', 'DJIBOUTI'),
        ('DM', 'DOMINICA'),
        ('DO', 'DOMINICAN REPUBLIC'),
        ('EC', 'ECUADOR'),
        ('EG', 'EGYPT'),
        ('SV', 'EL SALVADOR'),
        ('GQ', 'EQUATORIAL GUINEA'),
        ('ER', 'ERITREA'),
        ('EE', 'ESTONIA'),
        ('ET', 'ETHIOPIA'),
        ('FK', 'FALKLAND ISLANDS (MALVINAS)'),
        ('FO', 'FAROE ISLANDS'),
        ('FJ', 'FIJI'),
        ('FI', 'FINLAND'),
        ('FR', 'FRANCE'),
        ('GF', 'FRENCH GUIANA'),
        ('PF', 'FRENCH POLYNESIA'),
        ('TF', 'FRENCH SOUTHERN TERRITORIES'),
        ('GA', 'GABON'),
        ('GM', 'GAMBIA'),
        ('GE', 'GEORGIA'),
        ('DE', 'GERMANY'),
        ('GH', 'GHANA'),
        ('GI', 'GIBRALTAR'),
        ('GR', 'GREECE'),
        ('GL', 'GREENLAND'),
        ('GD', 'GRENADA'),
        ('GP', 'GUADELOUPE'),
        ('GU', 'GUAM'),
        ('GT', 'GUATEMALA'),
        ('GN', 'GUINEA'),
        ('GW', 'GUINEA'),
        ('GY', 'GUYANA'),
        ('HT', 'HAITI'),
        ('HM', 'HEARD ISLAND AND MCDONALD ISLANDS'),
        ('HN', 'HONDURAS'),
        ('HK', 'HONG KONG'),
        ('HU', 'HUNGARY'),
        ('IS', 'ICELAND'),
        ('IN', 'INDIA'),
        ('ID', 'INDONESIA'),
        ('IR', 'IRAN, ISLAMIC REPUBLIC OF'),
        ('IQ', 'IRAQ'),
        ('IE', 'IRELAND'),
        ('IL', 'ISRAEL'),
        ('IT', 'ITALY'),
        ('JM', 'JAMAICA'),
        ('JP', 'JAPAN'),
        ('JO', 'JORDAN'),
        ('KZ', 'KAZAKHSTAN'),
        ('KE', 'KENYA'),
        ('KI', 'KIRIBATI'),
        ('KP', "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF"),
        ('KR', 'KOREA, REPUBLIC OF'),
        ('KW', 'KUWAIT'),
        ('KG', 'KYRGYZSTAN'),
        ('LA', "LAO PEOPLE'S DEMOCRATIC REPUBLIC"),
        ('LV', 'LATVIA'),
        ('LB', 'LEBANON'),
        ('LS', 'LESOTHO'),
        ('LR', 'LIBERIA'),
        ('LY', 'LIBYAN ARAB JAMAHIRIYA'),
        ('LI', 'LIECHTENSTEIN'),
        ('LT', 'LITHUANIA'),
        ('LU', 'LUXEMBOURG'),
        ('MO', 'MACAO'),
        ('MK', 'MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF'),
        ('MG', 'MADAGASCAR'),
        ('MW', 'MALAWI'),
        ('MY', 'MALAYSIA'),
        ('MV', 'MALDIVES'),
        ('ML', 'MALI'),
        ('MT', 'MALTA'),
        ('MH', 'MARSHALL ISLANDS'),
        ('MQ', 'MARTINIQUE'),
        ('MR', 'MAURITANIA'),
        ('MU', 'MAURITIUS'),
        ('YT', 'MAYOTTE'),
        ('MX', 'MEXICO'),
        ('FM', 'MICRONESIA, FEDERATED STATES OF'),
        ('MD', 'MOLDOVA, REPUBLIC OF'),
        ('MC', 'MONACO'),
        ('MN', 'MONGOLIA'),
        ('MS', 'MONTSERRAT'),
        ('MA', 'MOROCCO'),
        ('MZ', 'MOZAMBIQUE'),
        ('MM', 'MYANMAR'),
        ('NA', 'NAMIBIA'),
        ('NR', 'NAURU'),
        ('NP', 'NEPAL'),
        ('NL', 'NETHERLANDS'),
        ('AN', 'NETHERLANDS ANTILLES'),
        ('NC', 'NEW CALEDONIA'),
        ('NZ', 'NEW ZEALAND'),
        ('NI', 'NICARAGUA'),
        ('NE', 'NIGER'),
        ('NG', 'NIGERIA'),
        ('NU', 'NIUE'),
        ('NF', 'NORFOLK ISLAND'),
        ('MP', 'NORTHERN MARIANA ISLANDS'),
        ('NO', 'NORWAY'),
        ('OM', 'OMAN'),
        ('PK', 'PAKISTAN'),
        ('PW', 'PALAU'),
        ('PS', 'PALESTINIAN TERRITORY, OCCUPIED'),
        ('PA', 'PANAMA'),
        ('PG', 'PAPUA NEW GUINEA'),
        ('PY', 'PARAGUAY'),
        ('PE', 'PERU'),
        ('PH', 'PHILIPPINES'),
        ('PN', 'PITCAIRN'),
        ('PL', 'POLAND'),
        ('PT', 'PORTUGAL'),
        ('PR', 'PUERTO RICO'),
        ('QA', 'QATAR'),
        ('RE', 'RÃ‰UNION'),
        ('RO', 'ROMANIA'),
        ('RU', 'RUSSIAN FEDERATION'),
        ('RW', 'RWANDA'),
        ('SH', 'SAINT HELENA'),
        ('KN', 'SAINT KITTS AND NEVIS'),
        ('LC', 'SAINT LUCIA'),
        ('PM', 'SAINT PIERRE AND MIQUELON'),
        ('VC', 'SAINT VINCENT AND THE GRENADINES'),
        ('WS', 'SAMOA'),
        ('SM', 'SAN MARINO'),
        ('ST', 'SAO TOME AND PRINCIPE'),
        ('SA', 'SAUDI ARABIA'),
        ('SN', 'SENEGAL'),
        ('CS', 'SERBIA AND MONTENEGRO'),
        ('SC', 'SEYCHELLES'),
        ('SL', 'SIERRA LEONE'),
        ('SG', 'SINGAPORE'),
        ('SK', 'SLOVAKIA'),
        ('SI', 'SLOVENIA'),
        ('SB', 'SOLOMON ISLANDS'),
        ('SO', 'SOMALIA'),
        ('ZA', 'SOUTH AFRICA'),
        ('GS', 'SOUTH GEORGIA AND SOUTH SANDWICH ISLANDS'),
        ('ES', 'SPAIN'),
        ('LK', 'SRI LANKA'),
        ('SD', 'SUDAN'),
        ('SR', 'SURINAME'),
        ('SJ', 'SVALBARD AND JAN MAYEN'),
        ('SZ', 'SWAZILAND'),
        ('SE', 'SWEDEN'),
        ('CH', 'SWITZERLAND'),
        ('SY', 'SYRIAN ARAB REPUBLIC'),
        ('TW', 'TAIWAN, PROVINCE OF CHINA'),
        ('TJ', 'TAJIKISTAN'),
        ('TZ', 'TANZANIA, UNITED REPUBLIC OF'),
        ('TH', 'THAILAND'),
        ('TL', 'TIMOR'),
        ('TG', 'TOGO'),
        ('TK', 'TOKELAU'),
        ('TO', 'TONGA'),
        ('TT', 'TRINIDAD AND TOBAGO'),
        ('TN', 'TUNISIA'),
        ('TR', 'TURKEY'),
        ('TM', 'TURKMENISTAN'),
        ('TC', 'TURKS AND CAICOS ISLANDS'),
        ('TV', 'TUVALU'),
        ('UG', 'UGANDA'),
        ('UA', 'UKRAINE'),
        ('AE', 'UNITED ARAB EMIRATES'),
        ('GB', 'UNITED KINGDOM'),
        ('US', 'UNITED STATES'),
        ('UM', 'UNITED STATES MINOR OUTLYING ISLANDS'),
        ('UY', 'URUGUAY'),
        ('UZ', 'UZBEKISTAN'),
        ('VU', 'VANUATU'),
        ('VN', 'VIETNAM'),
        ('VG', 'VIRGIN ISLANDS, BRITISH'),
        ('VI', 'VIRGIN ISLANDS, U.S.'),
        ('WF', 'WALLIS AND FUTUNA'),
        ('EH', 'WESTERN SAHARA'),
        ('YE', 'YEMEN'),
        ('ZW', 'ZIMBABWE')
    )
    first_name = forms.CharField(label="First Name", required=True,
                                 widget=forms.TextInput(attrs={'placeholder': 'Please Enter Your First Name'}))

    last_name = forms.CharField(label="Last Name", required=True,
                                widget=forms.TextInput(attrs={'placeholder': 'Please Enter Your Last Name'}))

    image = forms.FileField(label='Public Profile Image', required=True)
    account_type = forms.ChoiceField(label='Account Type', choices=ACCT_TYPE_CHOICES, required=True)
    his_age = forms.CharField(label='His Age', required=False,
                              widget=forms.TextInput(attrs={'placeholder': 'Please Enter His Age'}))
    her_age = forms.CharField(label='Her Age', required=False,
                              widget=forms.TextInput(attrs={'placeholder': 'Please Enter Her Age'}))
    bio = forms.CharField(label='Your Bio', required=False,
                          widget=forms.Textarea(attrs={'placeholder': 'Tell us something about you!', 'rows': '5'}))
    interests = forms.CharField(label='Your Interests', required=False,
                                widget=forms.Textarea(
                                    attrs={'placeholder': 'What are your interests? What are you looking for?',
                                           'rows': '2'}))
    kik = forms.CharField(label='Kik Username', required=False,
                          widget=forms.TextInput(attrs={'placeholder': 'Enter your Kik Username'}))

    city = forms.CharField(label='City', required=True,
                           widget=forms.TextInput(attrs={'placeholder': 'Enter your city'}))

    state = forms.ChoiceField(label='State', required=True, choices=STATE_CHOICES)

    zip = forms.IntegerField(label='Zip Code', required=True)

    country = forms.ChoiceField(label='Country', required=True, choices=COUNTRY_CHOICES)

    def __init__(self, *args, **kwargs):
        super(ProfileUpdateForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.layout = Layout(
            Row(
                Column('first_name', css_class='form-group col-6'),
                Column('last_name', css_class='form-group col-6')
            ),
            Row(
                Column('account_type', css_class='form-group col-6'),
                Column('image', css_class='form-group col-6')
            ),
            Row(
                Column('his_age', css_class='form-group col-6'),
                Column('her_age', css_class='form-group col-6')
            ),
            Row(
                Column('city',  css_class='form-group col-6'),
                Column('zip',  css_class='form-group col-6'),
            ),
            Row(
                Column('state',  css_class='form-group col-6'),
                Column('country', css_class='form-group col-6' ),
            ),
            Row(
                Column('bio', css_class='form-group col-12')
            ),
            Row(
                Column('interests', css_class='form-group col-12')
            ),
            Row(
                Column('kik', css_class='form-group col-6')
            ),
            ButtonHolder(
                Submit('save', 'Save')
            ),
        )


class VerificationStep1Form(forms.Form):
    phone = forms.CharField(label='Phone Number',
                            widget=forms.TextInput(attrs={'placeholder': '555-555-555'}))


class VerificationStep2Form(forms.Form):
    code = forms.CharField(label='Received Code',
                           widget=forms.TextInput(attrs={'placeholder': '12345'}))


class SignInPhotoVerifyForm(forms.ModelForm):
    class Meta:
        model = Verification
        fields = ['verification_image']
